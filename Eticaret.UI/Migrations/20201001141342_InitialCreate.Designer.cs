// <auto-generated />
using System;
using Eticaret.DataAccess.Concrete.EntityFrameworkCore.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Eticaret.UI.Migrations
{
    [DbContext(typeof(WebDbContext))]
    [Migration("20201001141342_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Eticaret.Core.Entities.Concrete.Claim", b =>
                {
                    b.Property<int>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaimId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("Eticaret.Core.Entities.Concrete.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LockoutEnd")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Eticaret.Core.Entities.Concrete.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.Banner", b =>
                {
                    b.Property<int>("bannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("row")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bannerId");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.Broadcast", b =>
                {
                    b.Property<int>("broadcastId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("beginDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("djId")
                        .HasColumnType("int");

                    b.Property<string>("finishDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("broadcastId");

                    b.ToTable("Broadcasts");
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.Dj", b =>
                {
                    b.Property<int>("djId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("keywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("row")
                        .HasColumnType("int");

                    b.Property<string>("sUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("spUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("tUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("djId");

                    b.ToTable("Djs");
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.Frequency", b =>
                {
                    b.Property<int>("frequencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("frequencyNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("radioId")
                        .HasColumnType("int");

                    b.Property<int>("row")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("frequencyId");

                    b.HasIndex("radioId");

                    b.ToTable("Frequencys");
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.MusicList", b =>
                {
                    b.Property<int>("musicListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("filePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<int>("row")
                        .HasColumnType("int");

                    b.Property<string>("singerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("songName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("topmusicListId")
                        .HasColumnType("int");

                    b.HasKey("musicListId");

                    b.HasIndex("topmusicListId");

                    b.ToTable("MusicLists");
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.News", b =>
                {
                    b.Property<int>("newsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("aM")
                        .HasColumnType("bit");

                    b.Property<DateTime>("addTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("hB")
                        .HasColumnType("bit");

                    b.Property<string>("imgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("keywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("oC")
                        .HasColumnType("bit");

                    b.Property<bool>("oH")
                        .HasColumnType("bit");

                    b.Property<int>("row")
                        .HasColumnType("int");

                    b.Property<bool>("sD")
                        .HasColumnType("bit");

                    b.Property<string>("shortDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("viewHit")
                        .HasColumnType("int");

                    b.HasKey("newsId");

                    b.HasIndex("categoryId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.NewsCategory", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("keywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("row")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoryId");

                    b.ToTable("NewsCategories");
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.NewsRadio", b =>
                {
                    b.Property<int>("newsId")
                        .HasColumnType("int");

                    b.Property<int>("radioId")
                        .HasColumnType("int");

                    b.Property<int>("newsRadioId")
                        .HasColumnType("int");

                    b.HasKey("newsId", "radioId");

                    b.HasIndex("radioId");

                    b.ToTable("NewsRadio");
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.PodcastMusicList", b =>
                {
                    b.Property<int>("podcastMusicListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("programId")
                        .HasColumnType("int");

                    b.Property<int>("row")
                        .HasColumnType("int");

                    b.Property<string>("soundPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("startingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("podcastMusicListId");

                    b.HasIndex("programId");

                    b.ToTable("PodcastMusicLists");
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.Program", b =>
                {
                    b.Property<int>("programId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("djName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("infoDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("keywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("row")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("programId");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.Radio", b =>
                {
                    b.Property<int>("radioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("imgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("m3u8Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("mobilstatus")
                        .HasColumnType("bit");

                    b.Property<int>("row")
                        .HasColumnType("int");

                    b.Property<string>("slogan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("streamUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("webUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("webstatus")
                        .HasColumnType("bit");

                    b.HasKey("radioId");

                    b.HasIndex("categoryId");

                    b.ToTable("Radios");
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.RadioCategory", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("keywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("row")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoryId");

                    b.ToTable("RadioCategories");
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.Setting", b =>
                {
                    b.Property<int>("settingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("footerLogoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("keywords")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("slogan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("settingId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("row")
                        .HasColumnType("int");

                    b.Property<int>("settingId")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("settingId");

                    b.ToTable("SocialMedias");
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.TopMusicList", b =>
                {
                    b.Property<int>("topmusicListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("keywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("row")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("topmusicListId");

                    b.ToTable("TopMusicLists");
                });

            modelBuilder.Entity("Eticaret.Core.Entities.Concrete.UserClaim", b =>
                {
                    b.HasOne("Eticaret.Core.Entities.Concrete.Claim", "Claim")
                        .WithMany("UserClaims")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eticaret.Core.Entities.Concrete.User", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.Frequency", b =>
                {
                    b.HasOne("Eticaret.Entities.Concrete.Radio", "Radio")
                        .WithMany("Frequencys")
                        .HasForeignKey("radioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.MusicList", b =>
                {
                    b.HasOne("Eticaret.Entities.Concrete.TopMusicList", "TopMusicList")
                        .WithMany("MusicLists")
                        .HasForeignKey("topmusicListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.News", b =>
                {
                    b.HasOne("Eticaret.Entities.Concrete.NewsCategory", "NewsCategory")
                        .WithMany("News")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.NewsRadio", b =>
                {
                    b.HasOne("Eticaret.Entities.Concrete.News", "News")
                        .WithMany("NewsRadios")
                        .HasForeignKey("newsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eticaret.Entities.Concrete.Radio", "Radio")
                        .WithMany("NewsRadios")
                        .HasForeignKey("radioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.PodcastMusicList", b =>
                {
                    b.HasOne("Eticaret.Entities.Concrete.Program", "Program")
                        .WithMany("PodcastMusicLists")
                        .HasForeignKey("programId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.Radio", b =>
                {
                    b.HasOne("Eticaret.Entities.Concrete.RadioCategory", "RadioCategory")
                        .WithMany("Radios")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Eticaret.Entities.Concrete.SocialMedia", b =>
                {
                    b.HasOne("Eticaret.Entities.Concrete.Setting", "Setting")
                        .WithMany("SocialMedia")
                        .HasForeignKey("settingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
